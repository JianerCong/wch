** todos
*** DONE grpc : rejected, grpc is too heavy...
*** DONE disable command_history
*** TODO https: delayed, maybe we can use other secure communication protocol such as noise?
*** TODO nbft
*** DONE pb Tx and Blks
*** DONE make pb a requirement <2024-02-04 Sun>
*** py vm
*** DONE pure data Tx <2024-01-30 Tue>
🦜 : How to we support this.

🐢 : The first thing we're gonna do is to add a field to our `Tx`.
#+begin_src c++
string type;
#+end_src

For now the allowed values are:
#+begin_src c++
{"", "data"}
#+end_src

The first means, well, the default, this is an EVM tx. The second means this is
an pure-data tx (innocent tx), ie. no VM of any type will be initialzed, and the
executor will just return `ok` for this kinda Tx.

🦜 : So what about our rpc ?

🐢 : Our rpc expects an array of Tx right?

🦜 : Yeah

🐢 : And if user did pass a `type` field in a Tx, then we add that to our Tx,
else, we leave it blank.
*** DONE unix domain socket

*** <2024-06-03 Mon>
I just realize that we didn't doc how to use ca-tx mode....

1. doc ca tx mode [x]
2. doc ca tx mode tx [x]
3. n->listenToGet("/get_latest_Blk",bind(&Rpc::handle_get_latest_Blk,this,_1)); [x]
4. n->listenToGet("/get_receipt",bind(&Rpc::handle_get_receipt,this,_1));[x]
5. n->listenToGet("/get_tx",bind(&Rpc::handle_get_tx,this,_1)); [x]
6. n->listenToGet("/get_blk",bind(&Rpc::handle_get_Blk,this,_1));[x]

7. update doc [x]
8. zh readme [x]
9. more readme [x]
10. how to build [x]
16. ctrl-c to quit [x]
12. docker 
11. draw zh logo
13. unix socket doc
14. pb doc
15. data persist doc

